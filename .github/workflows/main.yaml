name: Build, Test and Release

on:
  merge_group:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: nuget-package
          path: src/OpenFga.Sdk/bin/Release/OpenFga.Sdk.*.nupkg

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: openfga/dotnet-sdk

  publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-test')
    needs: [test]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: 6.0.x
          source-url: https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_AUTH_TOKEN}}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: nuget-package
          path: src/OpenFga.Sdk/bin/Release/OpenFga.Sdk.*.nupkg

      - name: Publish
        run: dotnet nuget push src/OpenFga.Sdk/bin/Release/OpenFga.Sdk.*.nupkg --api-key ${NUGET_AUTH_TOKEN}
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_AUTH_TOKEN}}

    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-') && !contains(github.ref, '-test-')
    needs: [test]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: 6.0.x
          source-url: https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_AUTH_TOKEN}}

      # Extract version from tag (remove 'v' prefix)
      - name: Extract version from tag
        run: echo "PACKAGE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore

      # Build with version override
      - name: Build
        run: dotnet build --no-restore --configuration Release -p:Version=${{ env.PACKAGE_VERSION }}

      - name: Validate Package
        run: |
          # Check package was created with correct version
          if [ ! -f "src/OpenFga.Sdk/bin/Release/OpenFga.Sdk.${{ env.PACKAGE_VERSION }}.nupkg" ]; then
            echo "Package not found!"
            exit 1
          fi
          
          # Verify it's marked as prerelease
          echo "Package version: ${{ env.PACKAGE_VERSION }}"
          if [[ "${{ env.PACKAGE_VERSION }}" == *"-"* ]]; then
            echo "✓ Prerelease version detected"
          else
            echo "✗ Not a prerelease version"
            exit 1
          fi

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: nuget-prerelease-package
          path: src/OpenFga.Sdk/bin/Release/OpenFga.Sdk.${{ env.PACKAGE_VERSION }}.nupkg

      - name: Publish Prerelease Package
        run: dotnet nuget push src/OpenFga.Sdk/bin/Release/OpenFga.Sdk.${{ env.PACKAGE_VERSION }}.nupkg --api-key ${NUGET_AUTH_TOKEN}
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_AUTH_TOKEN}}

  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-test')
    needs: publish

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: Roang-zero1/github-create-release-action@57eb9bdce7a964e48788b9e78b5ac766cb684803 # v3.0.1
        with:
          version_regex: ^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+
          prerelease_regex: ^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+-(alpha|beta|preview)\.[[:digit:]]+$
          changelog_file: CHANGELOG.md
          create_draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
